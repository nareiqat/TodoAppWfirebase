[{"C:\\Users\\nabee\\OneDrive\\Desktop\\portfolio-projects\\Proj 6 -Todo App\\todoapp\\src\\index.js":"1","C:\\Users\\nabee\\OneDrive\\Desktop\\portfolio-projects\\Proj 6 -Todo App\\todoapp\\src\\App.js":"2","C:\\Users\\nabee\\OneDrive\\Desktop\\portfolio-projects\\Proj 6 -Todo App\\todoapp\\src\\reportWebVitals.js":"3","C:\\Users\\nabee\\OneDrive\\Desktop\\portfolio-projects\\Proj 6 -Todo App\\todoapp\\src\\components\\Todo.js":"4","C:\\Users\\nabee\\OneDrive\\Desktop\\portfolio-projects\\Proj 6 -Todo App\\todoapp\\src\\firebase.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":1576,"mtime":1610162936607,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":2811,"mtime":1610164646605,"results":"10","hashOfConfig":"7"},{"size":525,"mtime":1610160796683,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"17tig54",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Users\\nabee\\OneDrive\\Desktop\\portfolio-projects\\Proj 6 -Todo App\\todoapp\\src\\index.js",[],["24","25"],"C:\\Users\\nabee\\OneDrive\\Desktop\\portfolio-projects\\Proj 6 -Todo App\\todoapp\\src\\App.js",[],"C:\\Users\\nabee\\OneDrive\\Desktop\\portfolio-projects\\Proj 6 -Todo App\\todoapp\\src\\reportWebVitals.js",[],"C:\\Users\\nabee\\OneDrive\\Desktop\\portfolio-projects\\Proj 6 -Todo App\\todoapp\\src\\components\\Todo.js",["26"],"import React,{useState} from 'react';\r\nimport {List, ListItemText, ListItem, ListItemAvatar, Button, Modal} from '@material-ui/core'\r\nimport './Todo.css';\r\nimport {db} from '../firebase';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"relative\",\r\n    left: 400,\r\n    // position: \"center\",\r\n    width: 600,\r\n    backgroundColor: theme.palette.background.paper,\r\n    // border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n\r\n  button: {\r\n    width: 150,\r\n    // border: '2px solid #000',\r\n    margin: \"10px\",\r\n  },\r\n}));\r\n\r\nfunction Todo(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [input, setInput] = useState();\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const updateTodo = () => {\r\n    // update the todo with the new input\r\n    db.collection(\"todos\").doc(props.todo.id).set(\r\n      {\r\n        todo: input,\r\n      },\r\n      { merge: true }\r\n    );\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal open={open} onClose={(e) => setOpen(false)}>\r\n        <div className={classes.paper}>\r\n          <h3>Update the Task</h3>\r\n          <input\r\n            placeholder={props.todo.todo}\r\n            value={input}\r\n            onChange={(Event) => setInput(Event.target.value)}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"default\"\r\n            onClick={updateTodo}\r\n            className={classes.button}\r\n          >\r\n            Upload ‚úî\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n      <List className=\"todo__list\">\r\n        <ListItem>\r\n          <ListItemAvatar></ListItemAvatar>\r\n          <ListItemText primary={props.todo.todo} secondary=\"Update Task ü§û \"    />\r\n        </ListItem>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={(Event) =>\r\n            db.collection(\"todos\").doc(props.todo.id).delete()\r\n          }\r\n          className={classes.button}\r\n          startIcon={<DeleteIcon />}\r\n        >\r\n          Delete\r\n        </Button>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={(e) => setOpen(true)}\r\n          className={classes.button}\r\n          endIcon={<EditIcon>send</EditIcon>}\r\n        >\r\n          Edit\r\n        </Button>\r\n\r\n        {/* <Button className=\"edit__btn\" onClick={e => setOpen(true)}>Edit</Button> */}\r\n        {/* <DeleteForeverIcon onClick={Event =>db.collection('todos').doc(props.todo.id).delete()}>‚ùåDelete</DeleteForeverIcon> */}\r\n      </List>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n\r\n","C:\\Users\\nabee\\OneDrive\\Desktop\\portfolio-projects\\Proj 6 -Todo App\\todoapp\\src\\firebase.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":35,"column":9,"nodeType":"33","messageId":"34","endLine":35,"endColumn":19},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'handleOpen' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]